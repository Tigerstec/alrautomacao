<?php
// Arquivo: process-form.php

// Define o cabe칞alho para que o navegador saiba que a resposta 칠 JSON
header('Content-Type: application/json');

// Inclui o arquivo de conex칚o PDO.
// Ajuste o caminho se necess치rio.
require_once 'app/config/connection.php'; 

// Array para armazenar a resposta JSON
$response = [];

// Verifica se a requisi칞칚o 칠 do tipo POST
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Coleta e sanitiza os dados do formul치rio (칩tima pr치tica, mantenha!)
    $name = filter_input(INPUT_POST, 'name', FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $company = filter_input(INPUT_POST, 'company', FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $email = filter_input(INPUT_POST, 'email', FILTER_SANITIZE_EMAIL);
    $phone = filter_input(INPUT_POST, 'phone', FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $location = filter_input(INPUT_POST, 'location', FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $service = filter_input(INPUT_POST, 'service', FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $description = filter_input(INPUT_POST, 'description', FILTER_SANITIZE_FULL_SPECIAL_CHARS);

    // Valida칞칚o b치sica
    if (empty($name) || empty($company) || empty($email) || empty($phone) || empty($location) || empty($service) || empty($description)) {
        // Se a valida칞칚o falhar, define a resposta de erro
        $response = [
            'status' => 'error',
            'message' => 'Por favor, preencha todos os campos obrigat칩rios.'
        ];
    } else {
        try {
            // 1. Prepara a query SQL para inser칞칚o com placeholders (?)
            $sql = "INSERT INTO contact_submissions (name, company, email, phone, location, service, description) VALUES (?, ?, ?, ?, ?, ?, ?)";
            
            // Prepara a declara칞칚o usando o objeto $pdo da sua conex칚o
            $stmt = $pdo->prepare($sql);

            // 2. Executa a query passando os valores em um array
            // O PDO associa cada '?' a um elemento do array, na ordem.
            // Isso previne SQL Injection de forma segura.
            $stmt->execute([$name, $company, $email, $phone, $location, $service, $description]);

            // 3. Se a linha acima executou sem erros, a inser칞칚o foi bem-sucedida
            $response = [
                'status' => 'success',
                'message' => 'Sua solicita칞칚o foi enviada com sucesso! Em breve entraremos em contato. 游꿀'
            ];

        } catch (PDOException $e) {
            // Se qualquer erro de banco de dados ocorrer, o PDO vai lan칞ar uma exce칞칚o
            // e o c칩digo dentro do 'catch' ser치 executado.
            
            // 칄 uma boa pr치tica registrar o erro real para an치lise interna
            error_log("Erro no banco de dados: " . $e->getMessage());

            // Envia uma mensagem gen칠rica para o usu치rio
            $response = [
                'status' => 'error',
                'message' => 'Ocorreu um erro ao enviar sua solicita칞칚o. Por favor, tente novamente mais tarde.'
            ];
        }
    }
} else {
    // Se a requisi칞칚o n칚o for POST, define uma resposta de erro
    $response = [
        'status' => 'error',
        'message' => 'M칠todo de requisi칞칚o inv치lido.'
    ];
}

// Garante que o objeto PDO seja fechado (opcional, o PHP faz isso no final, mas 칠 bom h치bito)
$pdo = null;

// Retorna a resposta em formato JSON
echo json_encode($response);
exit; // Garante que nenhum outro conte칰do seja enviado ap칩s o JSON
?>